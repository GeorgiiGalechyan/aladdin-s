---
import offices from './officesData'

const defOff = offices[0] // default visible office
---

<div class="offices-component">
  <div class="offices-container">
    <div class="select-container">
      <label for="office-select">Пункты приёма документов:</label>
      <div class="select">
        <select id="office-select">
          <optgroup label="Саратов">
            {offices.map((i) => <option value={i.id}> {i.address} </option>)}
          </optgroup>
        </select>
        <span class="custom-select-arrow"></span>
      </div>
    </div>

    <div id="default-office" class="office-info visible">
      <a href={defOff.phoneUrl}>{defOff.phone}</a>
      <pre>{defOff.working}</pre>
    </div>
    {
      offices.map((i) => (
        <div id={i.id} class="office-info hidden">
          <a href={i.phoneUrl}>{i.phone}</a>
          <pre>{i.working}</pre>
        </div>
      ))
    }
  </div>
</div>

<script>
  ;(document.getElementById('office-select') as HTMLOptionElement).value = 'volskaya'
  ;(document.getElementById('office-select') as HTMLSelectElement).addEventListener('change', () => {
    let defaultOff = document.getElementById('default-office') as HTMLDivElement | null
    if (defaultOff) {
      defaultOff.remove()
      console.log('defaultOffice is delete')
    }

    const select = document.getElementById('office-select') as HTMLSelectElement
    const value: string = select.value

    ;(document.querySelectorAll('.office-info') as NodeListOf<HTMLDivElement>).forEach((elem: HTMLDivElement): void => {
      const isChoise: boolean = elem.id === value

      const refreshVisible = () => {
        console.log(isChoise)
        if (isChoise) {
          elem.classList.remove(...elem.classList)
          elem.classList.add('office-info', 'visible')
        } else {
          elem.classList.remove(...elem.classList)
          elem.classList.add('office-info', 'hidden')
        }
      }

      refreshVisible()
    })
  })
</script>

<style>
  label {
    font-size: 0.9rem;
  }

  .offices-container {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;
  }

  .select-container {
    width: 12rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .select {
    position: relative;
    padding: 0;
  }

  #office-select {
    height: 100%;
    width: 100%;
    background-color: transparent;
    padding: 0 4rem 0 0;
    border: 0;
    font-size: 1rem;
    /* appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none; */
  }

  #office-select optgroup {
    font-size: 0.9rem;
    font-style: normal;
    font-weight: normal;
    color: aliceblue;
    background-color: cadetblue;
  }

  #office-select option {
    font-size: 0.9rem;
    font-style: normal;
    font-weight: normal;
    color: black;
    background-color: white;
  }
  #office-select option:is(:hover, :focus) {
    color: orangered;
    opacity: 0.8;
  }

  .custom-select-arrow {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    width: 2rem;
    height: 100%;
    background-color: white;
    pointer-events: none;
  }

  .custom-select-arrow::before,
  .custom-select-arrow::after {
    --size: 0.45em;
    content: '';
    position: absolute;
    width: 0;
    height: 0;

    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  .custom-select-arrow::before {
    border-left: var(--size) solid transparent;
    border-right: var(--size) solid transparent;
    border-top: var(--size) solid orangered;
    top: 70%;
  }

  .custom-select-arrow::after {
    border-left: var(--size) solid transparent;
    border-right: var(--size) solid transparent;
    border-bottom: var(--size) solid orangered;
    top: 30%;
  }

  .hidden {
    display: none;
  }

  .visible {
    width: 10rem;
    border-left: 1px solid black;
    padding: 0 0 0 1rem;
    margin-left: 2rem;
    font-size: 0.9rem;
    display: flex;
    flex-direction: column;
    text-align: end;
  }

  .visible :is(a, p, pre) {
    font-size: 0.8rem;
  }

  .visible a {
    font-weight: 600;
  }
</style>
