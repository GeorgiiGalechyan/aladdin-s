---
import offices from './officesData'

const defOff = offices[0] // default visible office
---

<div class="offices-component">
  <div class="select-column">
    <label for="office-select" class="header-title">Пункты приёма документов:</label>
    <div class="select-container">
      <select id="office-select">
        <optgroup label="Саратов">
          {
            offices.map((i) => (
              <option value={i.id} label={i.address}>
                {i.address}
              </option>
            ))
          }
        </optgroup>
      </select>
      <span class="custom-select-arrow"></span>
    </div>
  </div>

  <div id="default-office" class="office-info visible">
    <a href={defOff.phoneUrl}>{defOff.phone}</a>
    <pre>{defOff.working}</pre>
  </div>
  {
    offices.map((i) => (
      <div id={i.id} class="office-info hidden">
        <a href={i.phoneUrl}>{i.phone}</a>
        <pre>{i.working}</pre>
      </div>
    ))
  }
</div>

<script>
  ;(document.getElementById('office-select') as HTMLOptionElement).value = 'volskaya'
  ;(document.getElementById('office-select') as HTMLSelectElement).addEventListener('change', () => {
    let defaultOff = document.getElementById('default-office') as HTMLDivElement | null
    if (defaultOff) {
      defaultOff.remove()
    }

    const select = document.getElementById('office-select') as HTMLSelectElement
    const value: string = select.value

    ;(document.querySelectorAll('.office-info') as NodeListOf<HTMLDivElement>).forEach((elem: HTMLDivElement): void => {
      const isChoise: boolean = elem.id === value

      const refreshVisible = () => {
        if (isChoise) {
          elem.classList.remove(...elem.classList)
          elem.classList.add('office-info', 'visible')
        } else {
          elem.classList.remove(...elem.classList)
          elem.classList.add('office-info', 'hidden')
        }
      }

      refreshVisible()
    })
  })
</script>

<style>
  .offices-component {
    display: flex;
    flex-direction: row;
  }

  .select-column {
    width: 13rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .select-column > label {
    line-height: 1.3rem;
  }

  .select-container {
    position: relative;
    overflow: visible;
  }

  #office-select {
    background: transparent;
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    -ms-appearance: none;
  }

  #office-select optgroup {
    color: white;
    background-color: cadetblue;
  }

  #office-select option {
    color: black;
    background-color: white;
  }

  .custom-select-arrow {
    display: block;
    position: absolute;
    top: 0;
    right: 2.5em;
    width: 2rem;
    height: 100%;
    background-color: transparent;
    pointer-events: none;
  }

  .custom-select-arrow::before,
  .custom-select-arrow::after {
    --arrow-size: 0.35em;
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  .custom-select-arrow::before {
    border-left: var(--arrow-size) solid transparent;
    border-right: var(--arrow-size) solid transparent;
    border-top: var(--arrow-size) solid orangered;
    top: 67%;
  }

  .custom-select-arrow::after {
    border-left: var(--arrow-size) solid transparent;
    border-right: var(--arrow-size) solid transparent;
    border-bottom: var(--arrow-size) solid orangered;
    top: 32%;
  }

  .hidden {
    display: none;
  }

  .visible {
    width: 9rem;
    border-left: 1px solid chocolate;
    display: flex;
    flex-direction: column;
    text-align: end;
  }

  .visible :is(a, p, pre) {
    line-height: 1.3rem;
  }
</style>
