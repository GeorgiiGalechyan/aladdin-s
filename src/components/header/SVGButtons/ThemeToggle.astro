---

---

<button id="theme-toggle-btn" class="header-icon-btn" aria-label="Переключиться на темную тему" data-first-start="true">
  <!-- Увы, анимации не работают на Firefox((( Поэтому оставим svg спрайты до лучших времен -->
  <!-- <svg width="610.94" height="610.94" viewBox="0 0 610.94 610.94">
    <use href="#theme-toggle-icon"></use>
  </svg> -->
  <svg fill="var(--header-icon-color)" width="610.94" height="610.94" viewBox="0 0 610.94 610.94">
    <path
      class="theme-toggle-sun"
      d="M521.47,216v-127.53h-127.53L305.47,0l-88.47,88.47h-127.53v127.53L0,305.47l89.47,89.47v125.53h125.53l90.47,90.47,90.47-90.47h125.53v-125.53l89.47-89.47-89.47-89.47ZM305.47,472.97c-92.51,0-167.5-74.99-167.5-167.5s74.99-167.5,167.5-167.5,167.5,74.99,167.5,167.5-74.99,167.5-167.5,167.5Z"
    ></path>
    <circle class="theme-toggle-circle" cx="305.47" cy="305.47" r="127"></circle>
  </svg>
</button>

<!-- Директива is:inline нужна чтобы устранить мерцание при первой загрузке страницы в режиме темной темы. 
 P.S. Раньше тут были небольшие элементы TS, но в режиме is:inline скрипт переключается на JS, т.е. TS-код просто не работает. -->
<script is:inline>
  const themeToggleBtn = document.querySelector('#theme-toggle-btn')

  // Переключает на тёмную тему
  const enableDarkMode = () => {
    // data-first-start='true' устанавливает скорость анимации на 0ms при первой загрузке сайта. CSS настроен так, что при наличии данного арибута при загрузке в темном редиме визуально анимация переключения не срабатывает, т.е. иконка загружается уже в режиме темной темы.
    const isFirsStart = themeToggleBtn.getAttribute('data-first-start') === 'true'
    if (isFirsStart) {
      themeToggleBtn.removeAttribute('data-first-start')
    }

    // После удаления аттрибута data-first-start анимации срабатывают в штатном режиме и SVG-иконка внутри кнопки переключения темы красиво анимируется в зависимости от темы.

    document.body.classList.remove('light-theme')
    document.body.classList.add('dark-theme')
    themeToggleBtn.ariaLabel = 'Переключиться на светлую тему'
    localStorage.setItem('theme', 'dark-theme')
  }

  // Переключает на светлую тему
  const enableLightMode = () => {
    document.body.classList.remove('dark-theme')
    document.body.classList.add('light-theme')
    themeToggleBtn.ariaLabel = 'Переключиться на темную тему'
    localStorage.setItem('theme', 'light-theme')
  }

  // Меняем тему по клику на кнопку
  themeToggleBtn.addEventListener('click', () => {
    const isLightMode = document.body.classList.contains('light-theme')

    isLightMode ? enableDarkMode() : enableLightMode()
  })

  // Задаёт тему исходя из prefers-color-scheme
  const setThemePreferencs = () => {
    const isLightPrefersColorScheme = window.matchMedia('(prefers-color-scheme: light)').matches

    if (isLightPrefersColorScheme) {
      // body.light-theme установлена по умолчанию
      return
    }
    themeToggleBtn.setAttribute('data-first-start', 'true')
    enableDarkMode()
  }

  // Задаёт тему исходя из Local Storage и prefers-color-scheme
  const setThemeOnBoot = () => {
    const localStorageTheme = localStorage.getItem('theme')

    if (localStorageTheme === 'light-theme') {
      // body.light-theme установлена по умолчанию
      return
    } else if (localStorageTheme === 'dark-theme') {
      enableDarkMode()
    } else {
      setThemePreferencs()
    }
  }

  // document.onload - выполняется при загрузке страницы
  // Задаём тему при загрузке!
  document.onload = setThemeOnBoot()
</script>
